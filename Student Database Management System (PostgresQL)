-- 1. Create a database named "Student_database". Create a table called "Student_table".

CREATE DATABASE "Student_database"
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;

CREATE TABLE Student_table (
	Student_id INT NOT NULL PRIMARY KEY, 
	Stu_name TEXT,
	Department TEXT,
	Email_id TEXT,
	Phone_no NUMERIC,
	Address TEXT,
	Date_of_birth DATE,
	Gender TEXT,
	Major TEXT,
	GPA NUMERIC,
	Grade TEXT
);

ALTER TABLE IF EXISTS public."Student_table"
    OWNER to postgres;

-- 2. Insert 10 sample records into the "Student_table" using INSERT command.

INSERT INTO Student_table (Student_id, Stu_name, Department, Email_id, Phone_no, Address, Date_of_birth, Gender, Major, GPA, Grade)
VALUES
  	(1456, 'George Popescu', 'Computer Science', 'george@gmail.com', 289028902890, '123 Main Street', '12-MAR-82', 'Male', 'Computer Science', 9.8, 'A'),
    	(1325, 'Vasile Ionescu', 'Mathematics', 'vasile@gmail.com', 245624562456, '456 Elm Street', '05-OCT-84', 'Male', 'Mathematics', 7.5, 'B'),
    	(1645, 'Maria Popa', 'Physics', 'maria@gmail.com', 140014001400, '789 Oak Street', '17-JUN-83', 'Female', 'Physics', 4.2, 'E'),
	(3145, 'Ion Stan', 'English', 'ion@gmail.com', 325232523252, '987 Pine Street', '24-JAN-85', 'Male', 'English', 8.9, 'A'),
	(2146, 'Stanca Dumitru', 'History', 'stanca@gmail.com', 262026202620, '654 Maple Street', '15-MAY-82', 'Female', 'History', 6.6, 'C'),
	(3251, 'Alex Mihai', 'Biology', 'alex@gmail.com', 157015701570, '321 Oak Street', '07-NOV-81', 'Male', 'Biology', 2.7, 'F'),
    	(2215, 'Elena Stoica', 'Chemistry', 'elena@gmail.com', 224622462246, '789 Elm Street', '29-AUG-84', 'Female', 'Chemistry', 5.0, 'D'),
    	(4311, 'Adrian Gheorghe', 'Art', 'adrian@gmail.com', 445044504450, '456 Pine Street', '31-JUL-83', 'Male', 'Art', 8.1, 'B'),
    	(3514, 'Florea Vasile', 'Computer Science', 'florea@gmail.com', 323032303230, '987 Elm Street', '03-FEB-81', 'Male', 'Computer Science', 3.5, 'E'),
    	(1925, 'Oana Radu', 'Mathematics', 'oana@gmail.com', 432143214321, '123 Oak Street', '20-DEC-84', 'Female', 'Mathematics', 2.8, 'F')
;

-- 3. Develop a query to retrieve all students' information from "Student_table" and sort them in descdending order by their grade.

SELECT * FROM Student_table
ORDER BY Grade DESC;

-- 4. Implement a query to retrieve information about all male students from the "Student_table".

SELECT * FROM Student_table
WHERE Gender = 'Male';

-- or

SELECT * FROM Student_table
WHERE LOWER(Gender) = 'male';

-- 5. Create a query to fetch the details of students who have a GPA less than 5.0 from the "Student_table".

SELECT * FROM Student_table
WHERE GPA < 5.0;

-- 6. Write an update statement to modify the e-mail and grade of a student with a specific ID in the "Student_table".

UPDATE Student_table
SET Email_id = 'radu@gmail.com', Grade = 'E'
WHERE Student_id = 1925;

SELECT * FROM Student_table
WHERE Student_id = 1925;

-- 7. Create a query to retrieve the names and ages of all students who have grade "B" from the "Student_table".

SELECT Stu_name, EXTRACT(YEAR FROM AGE(CURRENT_DATE, Date_of_birth)) AS Age
FROM Student_table
WHERE Grade = 'B';

-- 8. Create a query to group the "Student_table" by the "Department" and "Gender" columns and calculate the average GPA for each combination.

SELECT Department, Gender, AVG (GPA) as Average_GPA
FROM Student_table
GROUP BY Department, Gender;

-- 9. Rename the "Student_table" to "Student_info" using the appropiate SQL statement.

 ALTER TABLE Student_table RENAME TO Student_info;

-- 10. Write a query to retrieve the name of the student with the highest GPA from the "Student_info" table.

SELECT Stu_name
FROM Student_info
WHERE GPA = (SELECT MAX(GPA) FROM Student_info);
