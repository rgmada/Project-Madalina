-- 1. Create a database named "EventsManagement". Create tables for Events, Attendees and Registrations.

CREATE DATABASE "EventsManagement"
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;

CREATE TABLE Events (
	Event_Id INT NOT NULL PRIMARY KEY,
	Event_Name VARCHAR (20),
	Event_Date DATE,
	Event_Location VARCHAR (20),
	Event_Description VARCHAR(100)
);

CREATE TABLE Attendees (
	Attendee_Id INT NOT NULL PRIMARY KEY,
	Attendee_Name VARCHAR (20),
	Attendee_Phone NUMERIC,
	Attendee_Email VARCHAR (20),
	Attendee_City TEXT
);

CREATE TABLE Registrations (
	Registration_Id INT NOT NULL PRIMARY KEY,
	Event_Id INT,
	Attendee_Id INT,
	Registration_Date DATE,
	Registration_Amount INT,
	FOREIGN KEY (Event_Id) REFERENCES Events(Event_Id) ON DELETE CASCADE, 
    	FOREIGN KEY (Attendee_Id) REFERENCES Attendees(Attendee_Id) ON DELETE CASCADE
);

-- 2. Insert values in Events, Attendees and Registrations tables.

INSERT INTO Events (Event_Id, Event_Name, Event_Date, Event_Location, Event_Description)
VALUES
    	(1, 'Rock Concert', '2023-07-01', '123 Street', 'Rock music performance'),
    	(2, 'Conference', '2023-07-10', '456 Street', 'IT experts sharing knowledge'),
    	(3, 'Workshop', '2023-07-15', '789 Street', 'Hands-on learning experience'),
    	(4, 'Exhibition', '2023-07-20', '123 Street', 'Display of modern artwork'),
    	(5, 'Sports Tournament', '2023-07-25', '456 Street', 'Competitive sports event'),
	(6, 'Seminar', '2023-08-05', '789 Street', 'Educational talk on a Philosophy topic'),
	(7, 'Jazz COncert', '2023-08-5', '123 Street', 'Jazz music performance'),
	(8, 'Conference', '2023-07-15', '456 Street', 'Neuroscience experts sharing knowledge'),
	(9, 'Workshop', '2023-07-25', '789 Street', 'Unlocking Creativity: A Journey into Innovative Thinking'),
	(10, 'Seminar', '2023-07-10', '1st Avenue', 'Mastering Leadership Skills: Navigating the Path to Success')
;

INSERT INTO Attendees (Attendee_Id, Attendee_Name, Attendee_Phone, Attendee_Email, Attendee_City)
VALUES
    	(1456, 'George Pop', 289028902890, 'george@gmail.com', 'BUCURESTI'),
    	(1325, 'Vasine Andrei', 245624562456, 'vasile@gmail.com', 'PITESTI'),
    	(1645, 'Maria Popescu', 140014001400, 'maria@gmail.com', 'PLOIESTI'),
    	(3145, 'Ion Popa', 325232523252, 'ion@gmail.com', 'PLOIESTI'),
    	(2146, 'Stanca Radu', 262026202620, 'stanca@gmail.com', 'BUCURESTI'),
    	(3251, 'Alex Dumitru', 157015701570, 'alex@gmail.com','BRASOV'),
    	(2215, 'Elena Stoica', 224622462246, 'elena@gmail.com','BUCURESTI'),
    	(4311, 'Adrian Vasile', 445044504450, 'adrian@gmail.com','BUCURESTI'),
    	(3514, 'Florea Stan', 323032303230, 'florea@gmail.com','BRASOV'),
    	(1925, 'Oana Mihai', 432143214321, 'oana@gmail.com','BUCURESTI'),
    	(2101, 'Marius Gheorghe', 251425142514, 'marius@gmail.com','PITESTI'),
    	(4705, 'Voicu Popovici', 129012901290, 'voicu@gmail.com','BRASOV')
;

INSERT INTO Registrations (Registration_Id, Event_Id, Attendee_Id, Registration_Date, Registration_Amount)
VALUES
    	(001, 1, 1456, '2023-06-25', 50),
    	(002, 2, 1325, '2023-06-26', 75),
    	(003, 3, 1645, '2023-06-27', 100),
    	(004, 4, 3145, '2023-06-28', 40),
	(005, 5, 2146, '2023-06-29', 30),
	(006, 6, 3251, '2023-06-24', 50),
	(007, 7, 2215, '2023-06-23', 70),
	(008, 8, 4311, '2023-06-25', 90),
	(009, 9, 3514, '2023-06-26', 200),
	(010, 10, 1925, '2023-06-27', 150),
	(011, 1, 2101, '2023-06-28', 50),
	(012, 3, 4705, '2023-06-29', 100),
	(013, 5, 1325, '2023-06-21', 30),
	(014, 7, 3145, '2023-06-30', 70),
	(015, 9, 1456, '2023-06-25', 200)
;

-- 3.a) Insert a new event.

INSERT INTO Events VALUES (11, 'Sports Tournament', '2023-08-5', '1st Avenue', 'Chess');

-- 3.b) Updating an event's information.

UPDATE Events
SET Event_Date = '2023-07-20', Event_Description = 'Empower Your Potential: Unleashing Personal Growth and Success'
WHERE Event_Id = '3'; 

-- 3.c) Deleting an event.

DELETE FROM Events WHERE Event_Id = '4';

-- 4.a) Inserting a new attendee.

INSERT INTO Attendees VALUES (5421, 'Vlad Anghelescu', 425642564256, 'vlad@gmail.com', 'IASI');

-- 4.b) Registering an attendee for an event.

INSERT INTO Registrations VALUES (016, 11, 5421, '2023-06-30', 200);

-- 4.c) Develop queries to retrieve event information, generate attendee lists and calculate event attendance statistics.

SELECT E.Event_Name, E.Event_Date, E.Event_Location, E.Event_Description, COUNT(R.Attendee_Id) AS No_Attendee
FROM Events E
LEFT JOIN Registrations R ON E.Event_Id = R.Event_Id
GROUP BY E.Event_Name, E.Event_Date, E.Event_Location, E.Event_Description;

-- or

SELECT E.Event_Name, E.Event_Date, E.Event_Location, E.Event_Description, COUNT(R.Attendee_Id) AS No_Attendee
FROM Events E
LEFT JOIN Registrations R ON E.Event_Id = R.Event_Id
WHERE E.Event_Id = '7'
GROUP BY E.Event_Name, E.Event_Date, E.Event_Location, E.Event_Description;
